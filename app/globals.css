@import "tailwindcss";
@import "tw-animate-css";
@import "../styles/anti-flicker.css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}


/*
Remove the inheritance of text transform in Edge and Firefox.
*/


/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.mesh-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.mesh-fixed {
  position: fixed;
}

.mesh-absolute {
  position: absolute;
}

.mesh-relative {
  position: relative;
}

.mesh-inset-0 {
  inset: 0px;
}

.mesh-left-2 {
  left: 0.5rem;
}

.mesh-left-\[50\%\] {
  left: 50%;
}

.mesh-right-4 {
  right: 1rem;
}

.mesh-top-4 {
  top: 1rem;
}

.mesh-top-\[50\%\] {
  top: 50%;
}

.mesh-z-50 {
  z-index: 50;
}

.mesh-m-1 {
  margin: 0.25rem;
}

.mesh-m-2 {
  margin: 0.5rem;
}

.-mesh-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}

.mesh-mx-8 {
  margin-left: 2rem;
  margin-right: 2rem;
}

.mesh-my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.mesh-ml-auto {
  margin-left: auto;
}

.mesh-flex {
  display: flex;
}

.mesh-inline-flex {
  display: inline-flex;
}

.mesh-grid {
  display: grid;
}

.mesh-hidden {
  display: none;
}

.mesh-h-10 {
  height: 2.5rem;
}

.mesh-h-16 {
  height: 4rem;
}

.mesh-h-3\.5 {
  height: 0.875rem;
}

.mesh-h-4 {
  height: 1rem;
}

.mesh-h-6 {
  height: 1.5rem;
}

.mesh-h-8 {
  height: 2rem;
}

.mesh-h-9 {
  height: 2.25rem;
}

.mesh-h-px {
  height: 1px;
}

.mesh-w-10 {
  width: 2.5rem;
}

.mesh-w-3\.5 {
  width: 0.875rem;
}

.mesh-w-4 {
  width: 1rem;
}

.mesh-w-60 {
  width: 15rem;
}

.mesh-w-8 {
  width: 2rem;
}

.mesh-w-9 {
  width: 2.25rem;
}

.mesh-w-full {
  width: 100%;
}

.mesh-min-w-\[8rem\] {
  min-width: 8rem;
}

.mesh-max-w-fit {
  max-width: -moz-fit-content;
  max-width: fit-content;
}

.mesh-max-w-lg {
  max-width: 32rem;
}

.mesh-grow {
  flex-grow: 1;
}

.mesh-translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.mesh-translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.mesh-cursor-default {
  cursor: default;
}

.mesh-cursor-pointer {
  cursor: pointer;
}

.mesh-select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.mesh-grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.mesh-flex-row {
  flex-direction: row;
}

.mesh-flex-col {
  flex-direction: column;
}

.mesh-flex-col-reverse {
  flex-direction: column-reverse;
}

.mesh-place-items-center {
  place-items: center;
}

.mesh-items-center {
  align-items: center;
}

.mesh-justify-center {
  justify-content: center;
}

.mesh-justify-between {
  justify-content: space-between;
}

.mesh-gap-1 {
  gap: 0.25rem;
}

.mesh-gap-2 {
  gap: 0.5rem;
}

.mesh-gap-4 {
  gap: 1rem;
}

.mesh-gap-6 {
  gap: 1.5rem;
}

.mesh-gap-y-8 {
  row-gap: 2rem;
}

.mesh-space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.mesh-overflow-hidden {
  overflow: hidden;
}

.mesh-whitespace-nowrap {
  white-space: nowrap;
}

.mesh-rounded-lg {
  border-radius: 0.5rem;
}

.mesh-rounded-md {
  border-radius: 0.375rem;
}

.mesh-rounded-sm {
  border-radius: 0.125rem;
}

.mesh-rounded-b-md {
  border-bottom-right-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}

.mesh-rounded-t-md {
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
}

.mesh-border {
  border-width: 1px;
}

.mesh-border-solid {
  border-style: solid;
}

.mesh-border-current {
  border-color: currentColor;
}

.mesh-border-zinc-200 {
  --tw-border-opacity: 1;
  border-color: rgb(228 228 231 / var(--tw-border-opacity, 1));
}

.mesh-border-zinc-700 {
  --tw-border-opacity: 1;
  border-color: rgb(63 63 70 / var(--tw-border-opacity, 1));
}

.mesh-bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}

.mesh-bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity, 1));
}

.mesh-bg-neutral-950 {
  --tw-bg-opacity: 1;
  background-color: rgb(10 10 10 / var(--tw-bg-opacity, 1));
}

.mesh-bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}

.mesh-bg-transparent {
  background-color: transparent;
}

.mesh-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.mesh-bg-zinc-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 245 / var(--tw-bg-opacity, 1));
}

.mesh-bg-zinc-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(24 24 27 / var(--tw-bg-opacity, 1));
}

.mesh-fill-current {
  fill: currentColor;
}

.mesh-fill-zinc-500 {
  fill: #71717a;
}

.mesh-p-1 {
  padding: 0.25rem;
}

.mesh-p-2 {
  padding: 0.5rem;
}

.mesh-p-6 {
  padding: 1.5rem;
}

.mesh-px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.mesh-px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.mesh-px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.mesh-px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.mesh-py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.mesh-py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.mesh-py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.mesh-py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.mesh-pl-8 {
  padding-left: 2rem;
}

.mesh-pr-2 {
  padding-right: 0.5rem;
}

.mesh-text-center {
  text-align: center;
}

.mesh-text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.mesh-text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.mesh-text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.mesh-text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.mesh-font-medium {
  font-weight: 500;
}

.mesh-font-normal {
  font-weight: 400;
}

.mesh-font-semibold {
  font-weight: 600;
}

.mesh-leading-none {
  line-height: 1;
}

.mesh-tracking-tight {
  letter-spacing: -0.025em;
}

.mesh-tracking-widest {
  letter-spacing: 0.1em;
}

.mesh-text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.mesh-text-neutral-50 {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity, 1));
}

.mesh-text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity, 1));
}

.mesh-text-neutral-950 {
  --tw-text-opacity: 1;
  color: rgb(10 10 10 / var(--tw-text-opacity, 1));
}

.mesh-text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.mesh-text-zinc-50 {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity, 1));
}

.mesh-text-zinc-500 {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / var(--tw-text-opacity, 1));
}

.mesh-text-zinc-900 {
  --tw-text-opacity: 1;
  color: rgb(24 24 27 / var(--tw-text-opacity, 1));
}

.mesh-text-zinc-950 {
  --tw-text-opacity: 1;
  color: rgb(9 9 11 / var(--tw-text-opacity, 1));
}

.mesh-no-underline {
  text-decoration-line: none;
}

.mesh-underline-offset-4 {
  text-underline-offset: 4px;
}

.mesh-opacity-60 {
  opacity: 0.6;
}

.mesh-opacity-70 {
  opacity: 0.7;
}

.mesh-opacity-80 {
  opacity: 0.8;
}

.mesh-shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.mesh-shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.mesh-shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.mesh-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.mesh-outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.mesh-backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.mesh-transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.mesh-transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.mesh-duration-200 {
  transition-duration: 200ms;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

.mesh-animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.mesh-fade-in-0 {
  --tw-enter-opacity: 0;
}

.mesh-zoom-in-95 {
  --tw-enter-scale: .95;
}

.mesh-duration-200 {
  animation-duration: 200ms;
}

.file\:mesh-border-0::file-selector-button {
  border-width: 0px;
}

.file\:mesh-text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.file\:mesh-font-medium::file-selector-button {
  font-weight: 500;
}

.placeholder\:mesh-text-zinc-500::-moz-placeholder {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / var(--tw-text-opacity, 1));
}

.placeholder\:mesh-text-zinc-500::placeholder {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / var(--tw-text-opacity, 1));
}

.hover\:mesh-border-zinc-200:hover {
  --tw-border-opacity: 1;
  border-color: rgb(228 228 231 / var(--tw-border-opacity, 1));
}

.hover\:mesh-bg-red-500\/90:hover {
  background-color: rgb(239 68 68 / 0.9);
}

.hover\:mesh-bg-zinc-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 245 / var(--tw-bg-opacity, 1));
}

.hover\:mesh-bg-zinc-100\/80:hover {
  background-color: rgb(244 244 245 / 0.8);
}

.hover\:mesh-bg-zinc-900\/90:hover {
  background-color: rgb(24 24 27 / 0.9);
}

.hover\:mesh-fill-white:hover {
  fill: #fff;
}

.hover\:mesh-text-black:hover {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}

.hover\:mesh-text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.hover\:mesh-text-zinc-900:hover {
  --tw-text-opacity: 1;
  color: rgb(24 24 27 / var(--tw-text-opacity, 1));
}

.hover\:mesh-underline:hover {
  text-decoration-line: underline;
}

.hover\:mesh-opacity-100:hover {
  opacity: 1;
}

.focus\:mesh-bg-zinc-100:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 245 / var(--tw-bg-opacity, 1));
}

.focus\:mesh-text-zinc-900:focus {
  --tw-text-opacity: 1;
  color: rgb(24 24 27 / var(--tw-text-opacity, 1));
}

.focus-visible\:mesh-outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:mesh-ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:mesh-ring-zinc-950:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(9 9 11 / var(--tw-ring-opacity, 1));
}

.disabled\:mesh-pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:mesh-cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:mesh-opacity-50:disabled {
  opacity: 0.5;
}

.mesh-peer:disabled ~ .peer-disabled\:mesh-cursor-not-allowed {
  cursor: not-allowed;
}

.mesh-peer:disabled ~ .peer-disabled\:mesh-opacity-70 {
  opacity: 0.7;
}

.data-\[disabled\]\:mesh-pointer-events-none[data-disabled] {
  pointer-events: none;
}

.data-\[state\=open\]\:mesh-bg-black[data-state="open"] {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.data-\[state\=open\]\:mesh-bg-zinc-100[data-state="open"] {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 245 / var(--tw-bg-opacity, 1));
}

.data-\[state\=open\]\:mesh-text-white[data-state="open"] {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.data-\[disabled\]\:mesh-opacity-50[data-disabled] {
  opacity: 0.5;
}

.data-\[state\=open\]\:mesh-animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=closed\]\:mesh-animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=closed\]\:mesh-fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}

.data-\[state\=open\]\:mesh-fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}

.data-\[state\=closed\]\:mesh-zoom-out-95[data-state="closed"] {
  --tw-exit-scale: .95;
}

.data-\[state\=open\]\:mesh-zoom-in-95[data-state="open"] {
  --tw-enter-scale: .95;
}

.data-\[side\=bottom\]\:mesh-slide-in-from-top-2[data-side="bottom"] {
  --tw-enter-translate-y: -0.5rem;
}

.data-\[side\=left\]\:mesh-slide-in-from-right-2[data-side="left"] {
  --tw-enter-translate-x: 0.5rem;
}

.data-\[side\=right\]\:mesh-slide-in-from-left-2[data-side="right"] {
  --tw-enter-translate-x: -0.5rem;
}

.data-\[side\=top\]\:mesh-slide-in-from-bottom-2[data-side="top"] {
  --tw-enter-translate-y: 0.5rem;
}

.data-\[state\=closed\]\:mesh-slide-out-to-left-1\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}

.data-\[state\=closed\]\:mesh-slide-out-to-top-\[48\%\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}

.data-\[state\=open\]\:mesh-slide-in-from-left-1\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}

.data-\[state\=open\]\:mesh-slide-in-from-top-\[48\%\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}

.dark\:mesh-border-zinc-800:is(.mesh-dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(39 39 42 / var(--tw-border-opacity, 1));
}

.dark\:mesh-bg-red-900:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(127 29 29 / var(--tw-bg-opacity, 1));
}

.dark\:mesh-bg-zinc-50:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity, 1));
}

.dark\:mesh-bg-zinc-800:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity, 1));
}

.dark\:mesh-bg-zinc-950:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(9 9 11 / var(--tw-bg-opacity, 1));
}

.dark\:mesh-text-white:is(.mesh-dark *) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.dark\:mesh-text-zinc-50:is(.mesh-dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity, 1));
}

.dark\:mesh-text-zinc-900:is(.mesh-dark *) {
  --tw-text-opacity: 1;
  color: rgb(24 24 27 / var(--tw-text-opacity, 1));
}

.dark\:hover\:mesh-bg-red-900\/90:hover:is(.mesh-dark *) {
  background-color: rgb(127 29 29 / 0.9);
}

.dark\:hover\:mesh-bg-zinc-50\/90:hover:is(.mesh-dark *) {
  background-color: rgb(250 250 250 / 0.9);
}

.dark\:hover\:mesh-bg-zinc-800:hover:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity, 1));
}

.dark\:hover\:mesh-bg-zinc-800\/80:hover:is(.mesh-dark *) {
  background-color: rgb(39 39 42 / 0.8);
}

.dark\:hover\:mesh-text-zinc-50:hover:is(.mesh-dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity, 1));
}

.dark\:focus\:mesh-bg-zinc-800:focus:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity, 1));
}

.dark\:focus\:mesh-text-zinc-50:focus:is(.mesh-dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity, 1));
}

.dark\:focus-visible\:mesh-ring-zinc-300:focus-visible:is(.mesh-dark *) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(212 212 216 / var(--tw-ring-opacity, 1));
}

.dark\:data-\[state\=open\]\:mesh-bg-zinc-800[data-state="open"]:is(.mesh-dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity, 1));
}

@media (min-width: 640px) {
  .sm\:mesh-max-w-\[425px\] {
    max-width: 425px;
  }

  .sm\:mesh-flex-row {
    flex-direction: row;
  }

  .sm\:mesh-justify-end {
    justify-content: flex-end;
  }

  .sm\:mesh-space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:mesh-rounded-lg {
    border-radius: 0.5rem;
  }

  .sm\:mesh-text-left {
    text-align: left;
  }
}